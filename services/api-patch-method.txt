// PATCH method for api object in services/api.ts
async patch(endpoint: string, data: any, options: any = {}) {
  let finalEndpoint = endpoint;
  if (!endpoint.startsWith('/products') && !endpoint.startsWith('/auth') && !endpoint.startsWith('/api') && !endpoint.startsWith('/bookings')) {
    finalEndpoint = `/api${endpoint}`;
  }
  let url = `${ApiConfig.BASE_URL}${finalEndpoint}`;

  const token = await AsyncStorage.getItem('userToken');

  try {
    const headers = {
      'Content-Type': 'application/json',
      ...(token ? { Authorization: `Bearer ${token}` } : {}),
      ...(options.headers || {})
    };

    const response = await fetch(url, {
      method: 'PATCH',
      headers,
      body: JSON.stringify(data)
    });

    if (!response.ok) {
      const errorData = await response.json().catch(() => ({}));
      throw new Error(errorData.message || `API error: ${response.status}`);
    }

    const responseData = await response.json().catch(() => ({ success: true }));
    return { data: responseData };
  } catch (error: any) {
    console.error(`API PATCH error (${finalEndpoint}):`, error.message);
    throw error;
  }
}
